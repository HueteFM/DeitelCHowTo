Fill-In the blanks in each of the following.

a) Every C program begins execution at the function "main".

b) Every function’s body begins with "{" and ends with "}"

c) Every statement ends with a(n) ";"

d) The "printf" standard library function displays information on the screen.

e) The escape sequence \n represents the "newline" character, which causes the cursor to position to the beginning of the next line on the screen.

f) The "scanf" standard library function obtains data from the keyboard.

g) The conversion specification "%d" in a printf or scanf format control string indicates that an integer will be output or input, respectively.

h) Whenever a new value is placed in a memory location, that value overrides the previous value in that location. This process is said to be "destructive".

i) When a value is read from a memory location, the value in that location is preserved; this process is said to be "nondestructive"

j)The "if" statement is used to make decisions.

State whether each of the following is true or false. If false, explain why.

a) Function printf always begins printing at the beginning of a new line.
False, printf prints where cursor is. 

b) Comments cause the computer to display the text after // on the screen
when the program is executed.
False, comments are ignore by compiler.

c) The escape sequence \n in a printf format control string positions the out-
put cursor to the beginning of the next line.
True

d) All variables must be defined before they’re used.
True

e) All variables must be given a type when they’re defined.
True

f) C considers the variables number and NuMbEr to be identical.
False, C is case sensitive.

g) Definitions can appear anywhere in the body of a function.
True

h) All arguments following the format control string in a printf function must
be preceded by an ampersand ( & ).
False, it is used in scanf

i) The remainder operator ( % ) can be used only with integer operands.
True

j) The arithmetic operators * , / , % , + and - all have the same precedence.
False, + and - have lower level of precedence

k) A program that prints three lines of output must contain three printf s.
False. Each \n can print new line.

a)Define the variable number to be of type int and initialize it to 0.
int number = 0;

b) Prompt the user to enter an integer. End your prompting message with a colon ( : ) followed by a space and leave the cursor positioned after the space.
printf("%s", "Enter an integer number: ");

c) Read an integer from the keyboard and store the value in integer variable a.
scanf("%d", &a);

d) If number is not equal to 7 , display "number is not equal to 7."
if(number != 7)
   printf("%s", number is not equal to 7");

e) Display "This is a C program." on one line.
printf("%s", "This is a C program.");

f) Display "This is a C program." on two lines so the first line ends with C .
printf("%s", "This is a C\n program.");   
 
g) Display "This is a C program." with each word on a separate line.
printf("%s", "This\nis\na\nC\nprogram.");   

h) Display "This is a C program." with the words separated by tabs.
printf("%s", "This\tis\ta\tC\tprogram.");   

2.4 Write a statement (or comment) to accomplish each of the following:
a) State that a program will calculate the product of three integers.
b) Prompt the user to enter three integers.
c) Define the variable x to be of type int and initialize it to 0 .
d) Define the variable y to be of type int and initialize it to 0 .
e) Define the variable z to be of type int and initialize it to 0 .
f) Read three integers from the keyboard and store them in variables x , y and z .
g) Define the variable result , compute the product of the integers in the vari-
ables x , y and z , and use that product to initialize the variable result .
h) Display "The product is" followed by the value of the int variable result .
2.5 Using the statements you wrote in Exercise 2.4, write a complete program that
calculates the product of three integers.
2.6 Identify and correct the errors in each of the following statements:
a) printf("The value is %d\n", &number);
b) scanf("%d%d", &number1, number2);
c) if (c < 7);{
puts("C is less than 7");
}
d) if
(c => 7) {
puts("C is greater than or equal to 7");
}

Write a statement (or comment) to accomplish each of the following:
a) State that a program will calculate the product of three integers.
// Calculate the product of three integers

b) Prompt the user to enter three integers.
printf("%s", "Enter three integers");

c) Define the variable x to be of type int and initialize it to 0 .
int x = 0;

d) Define the variable y to be of type int and initialize it to 0 .
int y = 0;

e) Define the variable z to be of type int and initialize it to 0 .
int z = 0;

f) Read three integers from the keyboard and store them in variables x , y and z .
scanf("%d%d%d", &x, &y, &z);

g) Define the variable result , compute the product of the integers in the variables x , y and z , and use that product to initialize the variable result.
int result = x * y * z;

h) Display "The product is" followed by the value of the int variable result.
printf("The product is %d\n", result);

2.5 Using the statements you wrote in Exercise 2.4, write a complete program that
calculates the product of three integers.

// Calculate the product of three integers
#define <stdio>

int main(void){
printf("%s", "Enter three integers");
int x = 0;
int y = 0;
int z = 0;
scanf("%d%d%d", &x, &y, &z);
printf("The product is %d\n", result);
int result = x * y * z;

return 0;
}




2.6 Identify and correct the errors in each of the following statements:
a) printf("The value is %d\n", &number);
printf("The value is %d\n", number);

b) scanf("%d%d", &number1, number2);
scanf("%d%d", &number1, &number2);

c) if (c < 7);{
puts("C is less than 7");
}
if (c < 7){
puts("C is less than 7");
}

d) if
(c => 7) {
puts("C is greater than or equal to 7");
}

(c >= 7){
puts("C is greater than or equal to 7");
}


